Q: Is one sorting algorithm always faster than another?
A: Generally, Counting Sort is always faster than the other algorithms. Java sort is mostly the second fastest with very few certain exceptions for the size of the array.

Q: Above we said that BubbleSort, WipingBubbleSort, and InsertionSort each had the same Theta(N^2) asymptotic time complexity. How can you explain the differences in the plots for these three algorithms?
A: Because they have the same asymptotic time complexity, their worst case scenario would be the same, having N^2. The differences within the plots for these algorithms can be explained on how they are
    being sorted in the first place. For bubblesort, for each iteration, you have n-i-1 inner loops, which can be related to (n^2)/2. While in insertion sort, the first sort will take n time, but half of that on average
    because you can stop the inside loop earlier when you already found the current element, which can be (n^2)/4. Wiping bubblesort would be within the middle as it contains both of these aspects.

Q: What information can we gain from empirical analysis of algorithms which might not be as noticeable in asymptotical bounds?
A: You can gain information that are not the most significant for the asymptotic bounds, just like for bubblesort and insertionsort.
    We were able to find how they compared to each other

Q: For any given sorting algorithm, does increasing the array size always mean the sorting takes longer?
A: Generally, yes. But increasing the array size doesn't *always* mean that the sorting takes longer since there are certain array sizes or configurations where
    the sorting time will increase, which means that the next array size up will take shorter.

Q: How does changing nrepeats change the plot?
A: Increasing nrepeats would smooth out the graph, essentially having more data points on the graph. This would mean that we can more accurately see how each algorithm compares to one another.

Q: Is your plot the exact same as your partner's plot, even with the same values of ntrials, by, and nrepeats?
A: It should not be since the arrays are randomly generated, so they would not look the same.

Q: Optional: Look at the source code for BubbleSorter to WipingBubbleSorter. After looking at the plots, can you intuitively explain why WipingBubbleSorter is usually 2x as fast as BubbleSorter? (Hint: Consider the immobility of some elements when the swapping passes are single directional (i.e. only going forward), and how this "Wiping" strategy helps deal with that issue.) Can you come up with an example that shows the difference in runtime?
A: